<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Svn on Oliver Wehrens</title>
    <link>https://owehrens.com/tags/svn/</link>
    <description>Recent content in Svn on Oliver Wehrens</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Mar 2010 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://owehrens.com/tags/svn/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How we switched from Subversion to Git</title>
      <link>https://owehrens.com/how-we-switched-from-subversion-to-git/</link>
      <pubDate>Mon, 22 Mar 2010 00:00:00 +0000</pubDate>
      <guid>https://owehrens.com/how-we-switched-from-subversion-to-git/</guid>
      <description>&lt;img class=&#34;alignleft&#34; src=&#34;http://git.wiki.kernel.org/images-git/2/24/Gitlogo.svg_from_msysGit.png&#34; title=&#34;Â¬Â© GitLogo @ mssysgit&#34;  /&gt;&#xA;So I heard about these strange &lt;strong&gt;distributed version control system&lt;/strong&gt;s like over a year ago. I used it in my own little projects and everything went smoothly and I really liked it.&#xA;The idea also caught on at work and my team started a using Git in a fresh project last summer. We did not had so much problems since you can use Git very much like a central vcs like Subversion if you want to.&#xA;&#xA;Still, for all other code, we &lt;strong&gt;used Subversion&lt;/strong&gt;.&#xA;We believe in agile and feature branches, so that&#39;s what we do a lot. Every story has its own branch. If one story touches multiple code bases, that means multiple &lt;a href=&#34;http://www.infoq.com/articles/agile-version-control&#34;&gt;merge down/copy up&#39;s&lt;/a&gt;.  &#xA;At some point, in preparation for a sprint review, we found that code had disappeared from the trunk. Everything seems to work perfectly, just this feature was missing. Usually you would think if code was deleted, there would be at least one test failing and telling you that something is missing. But no, typing &lt;strong&gt;one wrong version number&lt;/strong&gt; during merge down/copy up &lt;strong&gt;cut out the story&lt;/strong&gt; very cleanly. Once we found the problem we could merged it back in from the not yet deleted feature branch.&#xA;Overall we managed to work with Subversion but it was a growing pain since we knew there was something better.&#xA;&#xA;There are several advantages of distributed version control system which you all might have heard of already so I won&#39;t go in to detail of this (of course there is also one major disadvantage: complexity). The &lt;strong&gt;main advantages&lt;/strong&gt; for me are:&#xA;&#xA;&lt;!-- more --&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Everything is local - very fast&lt;/li&gt;&#xA;&lt;li&gt;Merging is much much easier (or updating from another repo)&lt;/li&gt;&#xA;&lt;li&gt;Because merging is easier I tend to branch more often to try out ideas&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;Now, what does it take for my team to get Git going in all major code bases?&#xA;&#xA;&lt;h1 id=&#34;technology&#34;&gt;Technology&lt;/h1&gt;&#xA;&lt;p&gt;Here is our setup what we use at work:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
