<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Selenium2 on Oliver Wehrens</title>
    <link>https://owehrens.com/tags/selenium2/</link>
    <description>Recent content in Selenium2 on Oliver Wehrens</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Jan 2010 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://owehrens.com/tags/selenium2/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Selenium2 for web testing (and not Selenium IDE)</title>
      <link>https://owehrens.com/using-selenium2-for-web-testing-and-not-selenium-ide/</link>
      <pubDate>Mon, 04 Jan 2010 00:00:00 +0000</pubDate>
      <guid>https://owehrens.com/using-selenium2-for-web-testing-and-not-selenium-ide/</guid>
      <description>&lt;h3 id=&#34;selenium-ide&#34;&gt;Selenium IDE&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;a href=&#34;http://seleniumhq.org&#34;&gt;Selenium&lt;/a&gt; is well know for automatic testing web pages. It does support many &lt;a href=&#34;http://seleniumhq.org/about/platforms.htm&#34;&gt;browsers, operating systems and languages&lt;a/&gt;. A &lt;a href=&#34;http://seleniumhq.org/projects/ide/&#34;&gt;Selenium IDE&lt;/a&gt; exists to aid you creating automated tests.&#xA;&#xA;&lt;img alt=&#34;Selenium&#34; src=&#34;https://owehrens.com/static/selenium.png&#34; title=&#34;Selenium IDE&#34; width=&#34;303&#34; height=&#34;177&#34; /&gt;&#xA;&#xA;It is possible to write extensions in JavaScript to have data driven tests. If you organize your selenium tests in a way that you split  the pages and forms in components, you can  load up new data for the tests (written in xml) to fill out forms differently for each use case. The Selenium IDE will be of a great help here since you start develop the tests in the IDE and later &#39;just&#39; parametrize the pages. With a couple of more javascript magic you can run these as well in &lt;a href=&#34;http://seleniumhq.org/projects/remote-control/&#34;&gt;Selenium Remote Control&lt;/a&gt; (Selenium RC for short). This even works for running  the tests in continuous integration systems like Hudson or Teamcity.&#xA;&#xA;Great Stuff.&#xA;&#xA;&lt;h3 id=&#34;the-problem&#34;&gt;The problem.&lt;/h3&gt;&#xA;&lt;p&gt;The drawback coding up your tests with the Selenium IDE is: &lt;!-- raw HTML omitted --&gt;HTML&lt;!-- raw HTML omitted --&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
