<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microservice on Oliver Wehrens</title>
    <link>https://owehrens.com/tags/microservice/</link>
    <description>Recent content in Microservice on Oliver Wehrens</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Feb 2017 20:54:58 +0100</lastBuildDate>
    <atom:link href="https://owehrens.com/tags/microservice/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Service Discovery For Machines And Humans</title>
      <link>https://owehrens.com/service-discovery-for-machines-and-humans/</link>
      <pubDate>Wed, 01 Feb 2017 20:54:58 +0100</pubDate>
      <guid>https://owehrens.com/service-discovery-for-machines-and-humans/</guid>
      <description>&lt;p&gt;My slides from the OOP 2017 conference.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Abstract:&#xA;&#xA;&#xA;&#xA;&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;5c80e29228d147f9891b7918f6a3a021&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Combining Continuous Deployment and a Microservice architecture brings new challenges to develop and operate your platform. A service discovery enables you to build a flexible system. Developers need to have an up to date view on the deployed services as well. A human readable registry with relevant information is needed.&#xA;I will outline what we solved with a Service Registry and what impact it had on our architecture. Furthermore I will show what we needed to give our developers to get an up to date view on the whole platform.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How is your microservice architecture doing?</title>
      <link>https://owehrens.com/how-is-your-microservice-architecture-doing/</link>
      <pubDate>Fri, 15 Jan 2016 00:00:00 +0000</pubDate>
      <guid>https://owehrens.com/how-is-your-microservice-architecture-doing/</guid>
      <description>&lt;p&gt;It all started when my new boss stepped into my door and asked me if I had a clue how our system was working. In an &lt;strong&gt;ideal world&lt;/strong&gt; we would have teams and developers who work on a isolated context with clear boundaries. They develop, test, deploy, monitor and operate everything by themselves. They are on 24/7 call and therefore they do everything possible that nothing fails. The system is stable and brings in the money.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Entwicklung verteilter Systeme - Herausforderungen nicht nur an die Architektur</title>
      <link>https://owehrens.com/entwicklung-verteilter-systeme-herausforderungen-nicht-nur-an-die-architektur/</link>
      <pubDate>Tue, 29 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://owehrens.com/entwicklung-verteilter-systeme-herausforderungen-nicht-nur-an-die-architektur/</guid>
      <description>&lt;p&gt;This is my talk about &lt;strong&gt;Development of distributed systems - challenges not only for the architecture&lt;/strong&gt;.&#xA;&#xA;&#xA; You guessed it, it is in german. I gave this talk at &lt;a href=&#34;http://bed-con.org/2015/talks/Entwicklung-verteilter-Systeme---Herausforderungen-nicht-nur-an-die-Architektur&#34;&gt;BedCon 2015&lt;/a&gt; and I will talk about it again at the &lt;a href=&#34;http://www.the-architecture-gathering.de/indexEN.php&#34;&gt;Architecture Gathering 2015&lt;/a&gt; in Munich on October 22nd.&#xA;&#xA;&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;af49bc1ea74b4fefaeaa3636c69542cd&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Abstract:&lt;/p&gt;&#xA;&lt;p&gt;Jede Platform wächst mit der Zeit. Mehr Entwickler mit noch mehr Ideen und Vorstellungen arbeiten alle gemeinsam an der Weiterentwicklung. Das System wird größer und auf viele Systeme verteilt. Häufig wird ein Technologie Stack vorgegeben, um es vermeintlich wartbarer und stabiler zu machen. Zusätzlich wird die Software oft dabei von Entwicklung zu QA weitergereicht und am Schluss von Operations deployed und betrieben. Das Ergebnis davon sind lange Releasezyklen und das verschenkte Potenzial, weil nicht die richtigen Tools genutzt werden konnten.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
