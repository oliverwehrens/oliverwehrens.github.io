<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AppEngine Google Java on Oliver Wehrens</title>
    <link>https://owehrens.com/categories/appengine-google-java/</link>
    <description>Recent content in AppEngine Google Java on Oliver Wehrens</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Apr 2009 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://owehrens.com/categories/appengine-google-java/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Quick Look at Google App Engine for Java</title>
      <link>https://owehrens.com/a-quick-look-at-google-app-engine-for-java/</link>
      <pubDate>Wed, 08 Apr 2009 00:00:00 +0000</pubDate>
      <guid>https://owehrens.com/a-quick-look-at-google-app-engine-for-java/</guid>
      <description>&lt;img alt=&#34;&#34; src=&#34;https://owehrens.com/static/appengine.gif&#34; class=&#34;alignleft&#34; width=&#34;145&#34; height=&#34;111&#34; /&gt;At &lt;a href=&#34;http://code.google.com/campfire/&#34;&gt;Campfire One&lt;/a&gt; Google &lt;a href=&#34;http://googleappengine.blogspot.com/2009/04/seriously-this-time-new-language-on-app.html&#34;&gt;announced&lt;/a&gt; their App Engine for Java (this was in the rumor mill for a couple of days already). The first 10,000 developers would get an early look at App Engine&#39;s Java language support. I would have almost missed it. Some tweets reminded me of registering with Google. I heard of AppEngine before but the fact that it was only available for Python did not make it very attractive to me. Now the game changed a bit with introducing Java (and &lt;a href=&#34;http://groups.google.com/group/google-appengine-java/web/will-it-play-in-app-engine&#34;&gt;other JVM languages&lt;/a&gt; (JRuby, partial Scala ...), well &lt;a href=&#34;http://blog.springsource.com/2009/04/07/write-your-google-app-engine-applications-in-groovy/&#34;&gt;Groovy&lt;/a&gt; for sure, &lt;a href=&#34;http://olabini.com/blog/2009/04/dynamic-languages-on-google-app-engine-an-overview/&#34;&gt;Ola Bini&lt;/a&gt; has more on that).&#xA;&#xA;After &lt;a href=&#34;http://appengine.google.com/&#34;&gt;registering&lt;/a&gt; with my Google ID they wanted to verify my account with a sms text message. Google is just listing  3 countries and then &#39;Other&#39; for sms verification and I expected it would not work with a german cellphone. But it did ;-).&#xA;&#xA;The &lt;a href=&#34;http://code.google.com/appengine/docs/java/gettingstarted/&#34;&gt;Tutorials&lt;/a&gt; on their site are working nicely (even if you don&#39;t have Eclipse which they are always referring to). Just follow the instructions step by step, use ant and the command line to get through the examples. Don&#39;t copy the template project, this is not in line with the documentation.&#xA;&#xA;In the last hour or so I went from nothing to a running &lt;a href=&#34;http://maxheapsize.appspot.com/&#34;&gt;Guestbook App at Google (try it!)&lt;/a&gt;. Once you get the environment right, the code is pretty straight forward.&#xA;&#xA;I see a couple of things which I do like about the App Engine.&#xA;&#xA;&lt;strong&gt;Support for Google Id and Sign In&lt;/strong&gt;&#xA;AppEngine support sign in with an Google ID with 2! lines of code. Great. I don&#39;t want to worry about that (this generates the Google login page and redirects).&#xA;&lt;pre name=&#34;code&#34; class=&#34;java&#34;&gt;&#xA;UserService userService = UserServiceFactory.getUserService();&#xA;User user = userService.getCurrentUser();&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;strong&gt;Automagic Persistence&lt;/strong&gt;&#xA;With simple annotation you persist your objects. No mapping, no nothing. You can configure if you want to be using JDO or JPA. No database hassle or whatsoever. Of course it needs to be seen how this work with more complex domain models.&#xA;&#xA;``` java&#xA;@PersistenceCapable(identityType = IdentityType.APPLICATION)&#xA;..&#xA;    @PrimaryKey&#xA;    @Persistent(valueStrategy = IdGeneratorStrategy.IDENTITY)&#xA;    private Long id;&#xA;&#xA;    @Persistent&#xA;    private User author;&#xA;&#xA;    @Persistent&#xA;    private String content;&#xA;&#xA;    @Persistent&#xA;    private Date date;&#xA;...&#xA;```&#xA;&#xA;&lt;strong&gt;Local Development - Remote Depolyment&lt;/strong&gt;&#xA;Everything works locally. If you deploy it to Google it uses the Google facilities. I don&#39;t have to worry (deployment is one ant command).&#xA;&#xA;&lt;strong&gt;Scalability and free Use&lt;/strong&gt;&#xA;If your application is successful you can grow with Google. More Resources at your fingertips. Of course this costs money (but you should make money at this point right?). If you are beyond the &lt;strong&gt;free&lt;/strong&gt; 10 GB bandwidth in/day, 10 GB bandwidth out/day, 5 million pageviews a month, 46.3 cpu h/day and 1000 emails/day you pay:&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CPU Time &#x9;$0.10/CPU hour &lt;/li&gt;&#xA;&lt;li&gt;Bandwidth Out $0.12/GByte &lt;/li&gt;&#xA;&lt;li&gt;Bandwidth In $0.10/GByte &lt;/li&gt;&#xA;&lt;li&gt;Stored Data $0.005/GByte-day&lt;/li&gt;&#xA;&lt;li&gt;Recipients Emailed $0.0001/Email &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;strong&gt;Monitoring&lt;/strong&gt;&#xA;You get nice and detailed overview of the status of you application. You can upload new version any time and go live on demand.&#xA;&lt;img alt=&#34;Google AppEngine Dashboard&#34; src=&#34;https://owehrens.com/static/GoogleAppEngineDashboard.jpg&#34; title=&#34;Google AppEngine Dashboard&#34; width=&#34;450&#34; height=&#34;303&#34; /&gt;&#xA;&#xA;This this is limited access and Google titles it &#39;early look&#39; there must be some gotchas but I hope they will get worked out. Of course you will depend on Google&#39;s code but I could imagine with a good abstraction layer you can minimize the dependencies to the AppEngine (although replacing some services you might need to use could be hard).&#xA;&#xA;The downside of using it are (gathered from various sources)&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;No own threads&lt;/li&gt;&#xA;&lt;li&gt;Restrictions of java.io.File&lt;/li&gt;&#xA;&lt;li&gt;Restrictions on reflection&lt;/li&gt;&#xA;&lt;li&gt;Maximum of 30 seconds per request&lt;/li&gt;&#xA;&lt;li&gt;An application may not open sockets&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;For sure there are some more benefits in hosting with Google (I guess the same goes for Amazon with S3/EC2). In the past I heard from a couple of startups using those kind of services but I never imagined that it would be that easy.  As I said, I was up and running in under one hour.&#xA;&#xA;I certainly will use AppEngine for a small application in the near future.</description>
    </item>
  </channel>
</rss>
